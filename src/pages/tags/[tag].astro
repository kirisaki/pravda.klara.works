---
import Layout from "../../layouts/Layout.astro";

// 投稿の型定義
interface Frontmatter {
    title: string;
    tags: string[];
}

interface MarkdownPost {
    frontmatter: Frontmatter;
    url: string;
    Content: () => any;
}

export async function getStaticPaths() {
    const allPosts = await Astro.glob<MarkdownPost>("../posts/*.md");
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
    ];

    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) =>
            post.frontmatter.tags.includes(tag),
        );
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
const { posts } = Astro.props as { posts: MarkdownPost[] };
const filteredPosts = posts.filter((post) =>
    post.frontmatter.tags?.includes(tag),
);
---

<Layout pageTitle={tag}>
    <h1>{tag}のタグが付いた記事</h1>
    <ul>
        {
            filteredPosts.map((p) => (
                <li>
                    <a href={p.url}>{p.frontmatter.title}</a>
                </li>
            ))
        }
    </ul>
</Layout>
